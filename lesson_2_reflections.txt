What happens when you initialize a repository? Why do you need to do it?

  a "meta data" file is created to change changes made to the repository.

How can you use the staging area to make sure you have one commit per logical change?

  The staging are can hold multiple changes that can have different commits

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

  When trying new functionality or experimenting.
  Allow to have simultaneous version working in parralel without impactin each other

How do the diagrams help you visualize the branch structure?

  The different branches can get complex very fast. Having a diagram of the
  branches will ensure that all commits are reachable and you dont "dead-end"
  any. The diagrams are critical to understand all branches as the git log
  command wont show everything if there is not a parent commit that was created.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

  When merging two branches in incorporates the new branch and the new branch
  commits are incorporated into the merged branch. Then you delete the old branches
  and now the commits show up on the merged branch, effectively eliminating it.
  if you want be sure to see the parent now there could be a merged commit you
  need to use git show and the commit ID

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

  Automatic merging is much faster and eliminates the chance for a mistake. Plus
  you get the improvements that have been made to both branches. On the downside
  you have to address conflicts and resolve them manually. but overall seems like
  a time saver.
